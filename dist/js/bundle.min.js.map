{"version":3,"sources":["system.js","named-register.js","main.js"],"names":["hasSelf","self","envGlobal","global","baseUrl","location","lastSepIndex","href","split","lastIndexOf","slice","backslashRegEx","resolveIfNotPlainOrUrl","relUrl","parentUrl","indexOf","replace","length","parentProtocol","pathname","segmented","output","segmentIndex","i","push","pop","join","resolveUrl","resolvePackages","pkgs","outPkgs","p","value","parseImportMap","json","imports","scopes","scopeName","scope","resolvedScopeName","getMatch","path","matchObj","sepIndex","segment","applyPackages","id","packages","pkgName","pkg","console","warn","resolveImportMap","importMap","urlResolved","packageResolution","Error","throwBare","hasSymbol","Symbol","toStringTag","REGISTRY","SystemJS","this","systemJSPrototype","prototype","lastRegister","import","loader","Promise","resolve","then","load","getOrCreateLoad","firstParentUrl","importerSetters","ns","Object","create","defineProperty","instantiatePromise","instantiate","registration","declared","name","h","changed","importId","meta","createContext","undefined","e","execute","setters","catch","err","onload","linkPromise","instantiation","all","map","dep","setter","depId","depLoad","I","n","depLoads","d","er","L","E","C","instantiateAll","loaded","postOrderExec","seen","depLoadPromises","forEach","depLoadPromise","doExec","execPromise","call","nullContext","topLevelLoad","parentId","url","register","deps","declare","getRegister","_lastRegister","freeze","System","window","addEventListener","error","systemRegister","reject","script","document","createElement","charset","async","crossOrigin","head","removeChild","src","appendChild","importScripts","constructor","firstGlobalProp","secondGlobalProp","lastGlobalProp","impt","hasOwnProperty","noteGlobalProps","emptyInstantiation","globalProp","lastProp","cnt","getGlobalProp","globalExport","_export","importMapPromise","parent","fetch","res","ok","status","statusText","WebAssembly","compileStreaming","arrayBuffer","buf","compile","module","importObj","Module","key","m","instance","exports","scripts","getElementsByTagName","type","JSON","parse","innerHTML","toStringTag$1","get","set","assign","done","delete","has","importerIndex","splice","registerRegistry","apply","arguments","parentURL","exports_1","context_1","App","log","exports_2","context_2","app_1","app_1_1"],"mappings":"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","file":"bundle.min.js","sourcesContent":["/*\n* SystemJS 3.0.1\n*/\n(function () {\n  const hasSelf = typeof self !== 'undefined';\n\n  const envGlobal = hasSelf ? self : global;\n\n  let baseUrl;\n  if (typeof location !== 'undefined') {\n    baseUrl = location.href.split('#')[0].split('?')[0];\n    const lastSepIndex = baseUrl.lastIndexOf('/');\n    if (lastSepIndex !== -1)\n      baseUrl = baseUrl.slice(0, lastSepIndex + 1);\n  }\n\n  const backslashRegEx = /\\\\/g;\n  function resolveIfNotPlainOrUrl (relUrl, parentUrl) {\n    if (relUrl.indexOf('\\\\') !== -1)\n      relUrl = relUrl.replace(backslashRegEx, '/');\n    // protocol-relative\n    if (relUrl[0] === '/' && relUrl[1] === '/') {\n      return parentUrl.slice(0, parentUrl.indexOf(':') + 1) + relUrl;\n    }\n    // relative-url\n    else if (relUrl[0] === '.' && (relUrl[1] === '/' || relUrl[1] === '.' && (relUrl[2] === '/' || relUrl.length === 2 && (relUrl += '/')) ||\n        relUrl.length === 1  && (relUrl += '/')) ||\n        relUrl[0] === '/') {\n      const parentProtocol = parentUrl.slice(0, parentUrl.indexOf(':') + 1);\n      // Disabled, but these cases will give inconsistent results for deep backtracking\n      //if (parentUrl[parentProtocol.length] !== '/')\n      //  throw new Error('Cannot resolve');\n      // read pathname from parent URL\n      // pathname taken to be part after leading \"/\"\n      let pathname;\n      if (parentUrl[parentProtocol.length + 1] === '/') {\n        // resolving to a :// so we need to read out the auth and host\n        if (parentProtocol !== 'file:') {\n          pathname = parentUrl.slice(parentProtocol.length + 2);\n          pathname = pathname.slice(pathname.indexOf('/') + 1);\n        }\n        else {\n          pathname = parentUrl.slice(8);\n        }\n      }\n      else {\n        // resolving to :/ so pathname is the /... part\n        pathname = parentUrl.slice(parentProtocol.length + (parentUrl[parentProtocol.length] === '/'));\n      }\n\n      if (relUrl[0] === '/')\n        return parentUrl.slice(0, parentUrl.length - pathname.length - 1) + relUrl;\n\n      // join together and split for removal of .. and . segments\n      // looping the string instead of anything fancy for perf reasons\n      // '../../../../../z' resolved to 'x/y' is just 'z'\n      const segmented = pathname.slice(0, pathname.lastIndexOf('/') + 1) + relUrl;\n\n      const output = [];\n      let segmentIndex = -1;\n      for (let i = 0; i < segmented.length; i++) {\n        // busy reading a segment - only terminate on '/'\n        if (segmentIndex !== -1) {\n          if (segmented[i] === '/') {\n            output.push(segmented.slice(segmentIndex, i + 1));\n            segmentIndex = -1;\n          }\n        }\n\n        // new segment - check if it is relative\n        else if (segmented[i] === '.') {\n          // ../ segment\n          if (segmented[i + 1] === '.' && (segmented[i + 2] === '/' || i + 2 === segmented.length)) {\n            output.pop();\n            i += 2;\n          }\n          // ./ segment\n          else if (segmented[i + 1] === '/' || i + 1 === segmented.length) {\n            i += 1;\n          }\n          else {\n            // the start of a new segment as below\n            segmentIndex = i;\n          }\n        }\n        // it is the start of a new segment\n        else {\n          segmentIndex = i;\n        }\n      }\n      // finish reading out the last segment\n      if (segmentIndex !== -1)\n        output.push(segmented.slice(segmentIndex));\n      return parentUrl.slice(0, parentUrl.length - pathname.length) + output.join('');\n    }\n  }\n\n  /*\n   * Import maps implementation\n   * \n   * To make lookups fast we pre-resolve the entire import map\n   * and then match based on backtracked hash lookups\n   * \n   */\n\n  function resolveUrl (relUrl, parentUrl) {\n    return resolveIfNotPlainOrUrl(relUrl, parentUrl) ||\n        relUrl.indexOf(':') !== -1 && relUrl ||\n        resolveIfNotPlainOrUrl('./' + relUrl, parentUrl);\n  }\n\n  function resolvePackages(pkgs) {\n    var outPkgs = {};\n    for (var p in pkgs) {\n      var value = pkgs[p];\n      // TODO package fallback support\n      if (typeof value !== 'string')\n        continue;\n      outPkgs[resolveIfNotPlainOrUrl(p) || p] = value;\n    }\n    return outPkgs;\n  }\n\n  function parseImportMap (json, baseUrl) {\n    const imports = resolvePackages(json.imports) || {};\n    const scopes = {};\n    if (json.scopes) {\n      for (let scopeName in json.scopes) {\n        const scope = json.scopes[scopeName];\n        let resolvedScopeName = resolveUrl(scopeName, baseUrl);\n        if (resolvedScopeName[resolvedScopeName.length - 1] !== '/')\n          resolvedScopeName += '/';\n        scopes[resolvedScopeName] = resolvePackages(scope) || {};\n      }\n    }\n\n    return { imports: imports, scopes: scopes, baseUrl: baseUrl };\n  }\n\n  function getMatch (path, matchObj) {\n    if (matchObj[path])\n      return path;\n    let sepIndex = path.length;\n    do {\n      const segment = path.slice(0, sepIndex + 1);\n      if (segment in matchObj)\n        return segment;\n    } while ((sepIndex = path.lastIndexOf('/', sepIndex - 1)) !== -1)\n  }\n\n  function applyPackages (id, packages, baseUrl) {\n    const pkgName = getMatch(id, packages);\n    if (pkgName) {\n      const pkg = packages[pkgName];\n      if (pkg === null)\n\n      if (id.length > pkgName.length && pkg[pkg.length - 1] !== '/')\n        console.warn(\"Invalid package target \" + pkg + \" for '\" + pkgName + \"' should have a trailing '/'.\");\n      return resolveUrl(pkg + id.slice(pkgName.length), baseUrl);\n    }\n  }\n\n  function resolveImportMap (id, parentUrl, importMap) {\n    const urlResolved = resolveIfNotPlainOrUrl(id, parentUrl);\n    if (urlResolved)\n      id = urlResolved;\n    const scopeName = getMatch(parentUrl, importMap.scopes);\n    if (scopeName) {\n      const scopePackages = importMap.scopes[scopeName];\n      const packageResolution = applyPackages(id, scopePackages, scopeName);\n      if (packageResolution)\n        return packageResolution;\n    }\n    return applyPackages(id, importMap.imports, importMap.baseUrl) || urlResolved || throwBare(id, parentUrl);\n  }\n\n  function throwBare (id, parentUrl) {\n    throw new Error('Unable to resolve bare specifier \"' + id + (parentUrl ? '\" from ' + parentUrl : '\"'));\n  }\n\n  /*\n   * SystemJS Core\n   * \n   * Provides\n   * - System.import\n   * - System.register support for\n   *     live bindings, function hoisting through circular references,\n   *     reexports, dynamic import, import.meta.url, top-level await\n   * - System.getRegister to get the registration\n   * - Symbol.toStringTag support in Module objects\n   * - Hookable System.createContext to customize import.meta\n   * - System.onload(id, err?) handler for tracing / hot-reloading\n   * \n   * Core comes with no System.prototype.resolve or\n   * System.prototype.instantiate implementations\n   */\n\n  const hasSymbol = typeof Symbol !== 'undefined';\n  const toStringTag = hasSymbol && Symbol.toStringTag;\n  const REGISTRY = hasSymbol ? Symbol() : '@';\n\n  function SystemJS () {\n    this[REGISTRY] = {};\n  }\n\n  const systemJSPrototype = SystemJS.prototype;\n  systemJSPrototype.import = function (id, parentUrl) {\n    const loader = this;\n    return Promise.resolve(loader.resolve(id, parentUrl))\n    .then(function (id) {\n      const load = getOrCreateLoad(loader, id);\n      return load.C || topLevelLoad(loader, load);\n    });\n  };\n\n  // Hookable createContext function -> allowing eg custom import meta\n  systemJSPrototype.createContext = function (parentId) {\n    return {\n      url: parentId\n    };\n  };\n\n  // onLoad(id, err) provided for tracing / hot-reloading\n  systemJSPrototype.onload = function () {};\n\n  let lastRegister;\n  systemJSPrototype.register = function (deps, declare) {\n    lastRegister = [deps, declare];\n  };\n\n  /*\n   * getRegister provides the last anonymous System.register call\n   */\n  systemJSPrototype.getRegister = function () {\n    const _lastRegister = lastRegister;\n    lastRegister = undefined;\n    return _lastRegister;\n  };\n\n  function getOrCreateLoad (loader, id, firstParentUrl) {\n    let load = loader[REGISTRY][id];\n    if (load)\n      return load;\n\n    const importerSetters = [];\n    const ns = Object.create(null);\n    if (toStringTag)\n      Object.defineProperty(ns, toStringTag, { value: 'Module' });\n    \n    let instantiatePromise = Promise.resolve()\n    .then(function () {\n      return loader.instantiate(id, firstParentUrl);\n    })\n    .then(function (registration) {\n      if (!registration)\n        throw new Error('Module ' + id + ' did not instantiate');\n      function _export (name, value) {\n        // note if we have hoisted exports (including reexports)\n        load.h = true;\n        let changed = false;\n        if (typeof name !== 'object') {\n          if (!(name in ns) || ns[name] !== value) {\n            ns[name] = value;\n            changed = true;\n          }\n        }\n        else {\n          for (let p in name) {\n            let value = name[p];\n            if (!(p in ns) || ns[p] !== value) {\n              ns[p] = value;\n              changed = true;\n            }\n          }\n        }\n        if (changed)\n          for (let i = 0; i < importerSetters.length; i++)\n            importerSetters[i](ns);\n        return value;\n      }\n      const declared = registration[1](_export, registration[1].length === 2 ? {\n        import: function (importId) {\n          return loader.import(importId, id);\n        },\n        meta: loader.createContext(id)\n      } : undefined);\n      load.e = declared.execute || function () {};\n      return [registration[0], declared.setters || []];\n    });\n\n    instantiatePromise = instantiatePromise.catch(function (err) {\n        loader.onload(load.id, err);\n        throw err;\n      });\n\n    const linkPromise = instantiatePromise\n    .then(function (instantiation) {\n      return Promise.all(instantiation[0].map(function (dep, i) {\n        const setter = instantiation[1][i];\n        return Promise.resolve(loader.resolve(dep, id))\n        .then(function (depId) {\n          const depLoad = getOrCreateLoad(loader, depId, id);\n          // depLoad.I may be undefined for already-evaluated\n          return Promise.resolve(depLoad.I)\n          .then(function () {\n            if (setter) {\n              depLoad.i.push(setter);\n              // only run early setters when there are hoisted exports of that module\n              // the timing works here as pending hoisted export calls will trigger through importerSetters\n              if (depLoad.h || !depLoad.I)\n                setter(depLoad.n);\n            }\n            return depLoad;\n          });\n        })\n      }))\n      .then(function (depLoads) {\n        load.d = depLoads;\n      });\n    });\n\n    linkPromise.catch(function (err) {\n      load.e = null;\n      load.er = err;\n    });\n\n    // Captial letter = a promise function\n    return load = loader[REGISTRY][id] = {\n      id: id,\n      // importerSetters, the setters functions registered to this dependency\n      // we retain this to add more later\n      i: importerSetters,\n      // module namespace object\n      n: ns,\n\n      // instantiate\n      I: instantiatePromise,\n      // link\n      L: linkPromise,\n      // whether it has hoisted exports\n      h: false,\n\n      // On instantiate completion we have populated:\n      // dependency load records\n      d: undefined,\n      // execution function\n      // set to NULL immediately after execution (or on any failure) to indicate execution has happened\n      // in such a case, pC should be used, and pLo, pLi will be emptied\n      e: undefined,\n\n      // On execution we have populated:\n      // the execution error if any\n      er: undefined,\n      // in the case of TLA, the execution promise\n      E: undefined,\n\n      // On execution, pLi, pLo, e cleared\n\n      // Promise for top-level completion\n      C: undefined\n    };\n  }\n\n  function instantiateAll (loader, load, loaded) {\n    if (!loaded[load.id]) {\n      loaded[load.id] = true;\n      // load.L may be undefined for already-instantiated\n      return Promise.resolve(load.L)\n      .then(function () {\n        return Promise.all(load.d.map(function (dep) {\n          return instantiateAll(loader, dep, loaded);\n        }));\n      })\n    }\n  }\n\n  function topLevelLoad (loader, load) {\n    return load.C = instantiateAll(loader, load, {})\n    .then(function () {\n      return postOrderExec(loader, load, {});\n    })\n    .then(function () {\n      return load.n;\n    });\n  }\n\n  // the closest we can get to call(undefined)\n  const nullContext = Object.freeze(Object.create(null));\n\n  // returns a promise if and only if a top-level await subgraph\n  // throws on sync errors\n  function postOrderExec (loader, load, seen) {\n    if (seen[load.id])\n      return;\n    seen[load.id] = true;\n\n    if (!load.e) {\n      if (load.er)\n        throw load.er;\n      if (load.E)\n        return load.E;\n      return;\n    }\n\n    // deps execute first, unless circular\n    let depLoadPromises;\n    load.d.forEach(function (depLoad) {\n      {\n        try {\n          const depLoadPromise = postOrderExec(loader, depLoad, seen);\n          if (depLoadPromise)\n            (depLoadPromises = depLoadPromises || []).push(depLoadPromise);\n        }\n        catch (err) {\n          loader.onload(load.id, err);\n          throw err;\n        }\n      }\n    });\n    if (depLoadPromises) {\n      return Promise.all(depLoadPromises)\n        .then(doExec)\n        .catch(function (err) {\n          loader.onload(load.id, err);\n          throw err;\n        });\n    }\n\n    return doExec();\n\n    function doExec () {\n      try {\n        let execPromise = load.e.call(nullContext);\n        if (execPromise) {\n          execPromise = execPromise.then(function () {\n              load.C = load.n;\n              load.E = null; // indicates completion\n              loader.onload(load.id, null);\n            }, function (err) {\n              loader.onload(load.id, err);\n              throw err;\n            });\n          execPromise.catch(function () {});\n          return load.E = load.E || execPromise;\n        }\n        // (should be a promise, but a minify optimization to leave out Promise.resolve)\n        load.C = load.n;\n        loader.onload(load.id, null);\n      }\n      catch (err) {\n        loader.onload(load.id, err);\n        load.er = err;\n        throw err;\n      }\n      finally {\n        load.L = load.I = undefined;\n        load.e = null;\n      }\n    }\n  }\n\n  envGlobal.System = new SystemJS();\n\n  /*\n   * Supports loading System.register via script tag injection\n   */\n\n  let err;\n  if (typeof window !== 'undefined')\n    window.addEventListener('error', function (e) {\n      err = e.error;\n    });\n\n  const systemRegister = systemJSPrototype.register;\n  systemJSPrototype.register = function (deps, declare) {\n    err = undefined;\n    systemRegister.call(this, deps, declare);\n  };\n\n  systemJSPrototype.instantiate = function (url, firstParentUrl) {\n    const loader = this;\n    return new Promise(function (resolve, reject) {\n      const script = document.createElement('script');\n      script.charset = 'utf-8';\n      script.async = true;\n      script.crossOrigin = 'anonymous';\n      script.addEventListener('error', function () {\n        reject(new Error('Error loading ' + url + (firstParentUrl ? ' from ' + firstParentUrl : '')));\n      });\n      script.addEventListener('load', function () {\n        document.head.removeChild(script);\n        // Note URL normalization issues are going to be a careful concern here\n        if (err)\n          return reject(err);\n        else\n          resolve(loader.getRegister());\n      });\n      script.src = url;\n      document.head.appendChild(script);\n    });\n  };\n\n  /*\n   * Supports loading System.register in workers\n   */\n\n  if (hasSelf && typeof importScripts === 'function')\n    systemJSPrototype.instantiate = function (url) {\n      const loader = this;\n      return new Promise(function (resolve, reject) {\n        try {\n          importScripts(url);\n        }\n        catch (e) {\n          reject(e);\n        }\n        resolve(loader.getRegister());\n      });\n    };\n\n  /*\n   * SystemJS global script loading support\n   * Extra for the s.js build only\n   * (Included by default in system.js build)\n   */\n  (function (global) {\n\n  const systemJSPrototype = System.constructor.prototype;\n\n  // safari unpredictably lists some new globals first or second in object order\n  let firstGlobalProp, secondGlobalProp, lastGlobalProp;\n  function getGlobalProp () {\n    let cnt = 0;\n    let lastProp;\n    for (let p in global) {\n      if (!global.hasOwnProperty(p))\n        continue;\n      if (cnt === 0 && p !== firstGlobalProp || cnt === 1 && p !== secondGlobalProp)\n        return p;\n      cnt++;\n      lastProp = p;\n    }\n    if (lastProp !== lastGlobalProp)\n      return lastProp;\n  }\n\n  function noteGlobalProps () {\n    // alternatively Object.keys(global).pop()\n    // but this may be faster (pending benchmarks)\n    firstGlobalProp = secondGlobalProp = undefined;\n    for (let p in global) {\n      if (!global.hasOwnProperty(p))\n        continue;\n      if (!firstGlobalProp)\n        firstGlobalProp = p;\n      else if (!secondGlobalProp)\n        secondGlobalProp = p;\n      lastGlobalProp = p;\n    }\n    return lastGlobalProp;\n  }\n\n  const impt = systemJSPrototype.import;\n  systemJSPrototype.import = function (id, parentUrl) {\n    noteGlobalProps();\n    return impt.call(this, id, parentUrl);\n  };\n\n  const emptyInstantiation = [[], function () { return {} }];\n\n  const getRegister = systemJSPrototype.getRegister;\n  systemJSPrototype.getRegister = function () {\n    const lastRegister = getRegister.call(this);\n    if (lastRegister)\n      return lastRegister;\n    \n    // no registration -> attempt a global detection as difference from snapshot\n    // when multiple globals, we take the global value to be the last defined new global object property\n    // for performance, this will not support multi-version / global collisions as previous SystemJS versions did\n    // note in Edge, deleting and re-adding a global does not change its ordering\n    const globalProp = getGlobalProp();\n    if (!globalProp)\n      return emptyInstantiation;\n    \n    let globalExport;\n    try {\n      globalExport = global[globalProp];\n    }\n    catch (e) {\n      return emptyInstantiation;\n    }\n\n    return [[], function (_export) {\n      return { execute: function () { _export('default', globalExport); } };\n    }];\n  };\n\n  })(typeof self !== 'undefined' ? self : global);\n\n  /*\n   * Loads WASM based on file extension detection\n   * Assumes successive instantiate will handle other files\n   */\n  const instantiate = systemJSPrototype.instantiate;\n  systemJSPrototype.instantiate = function (url, parent) {\n    if (url.slice(-5) !== '.wasm')\n      return instantiate.call(this, url, parent);\n    \n    return fetch(url)\n    .then(function (res) {\n      if (!res.ok)\n        throw new Error(res.status + ' ' + res.statusText + ' ' + res.url + (parent ? ' loading from ' + parent : ''));\n\n      if (WebAssembly.compileStreaming)\n        return WebAssembly.compileStreaming(res);\n      \n      return res.arrayBuffer()\n      .then(function (buf) {\n        return WebAssembly.compile(buf);\n      });\n    })\n    .then(function (module) {\n      const deps = [];\n      const setters = [];\n      const importObj = {};\n\n      // we can only set imports if supported (eg early Safari doesnt support)\n      if (WebAssembly.Module.imports)\n        WebAssembly.Module.imports(module).forEach(function (impt) {\n          const key = impt.module;\n          setters.push(function (m) {\n            importObj[key] = m;\n          });\n          if (deps.indexOf(key) === -1)\n            deps.push(key);\n        });\n\n      return [deps, function (_export) {\n        return {\n          setters: setters,\n          execute: function () {\n            return WebAssembly.instantiate(module, importObj)\n            .then(function (instance) {\n              _export(instance.exports);\n            });\n          }\n        };\n      }];\n    });\n  };\n\n  /*\n   * Import map support for SystemJS\n   * \n   * <script type=\"systemjs-importmap\">{}</script>\n   * OR\n   * <script type=\"systemjs-importmap\" src=package.json></script>\n   * \n   * Only supports loading the first import map\n   */\n\n  var importMap, importMapPromise;\n  if (typeof document !== 'undefined') {\n    const scripts = document.getElementsByTagName('script');\n    for (let i = 0; i < scripts.length; i++) {\n      const script = scripts[i];\n      if (script.type !== 'systemjs-importmap')\n        continue;\n\n      if (!script.src) {\n        importMap = parseImportMap(JSON.parse(script.innerHTML), baseUrl);\n      }\n      else {\n        importMapPromise = fetch(script.src)\n        .then(function (res) {\n          return res.json();\n        })\n        .then(function (json) {\n          importMap = parseImportMap(json, script.src);\n        });\n      }\n      break;\n    }\n  }\n\n  importMap = importMap || { imports: {}, scopes: {} };\n\n  systemJSPrototype.resolve = function (id, parentUrl) {\n    parentUrl = parentUrl || baseUrl;\n\n    if (importMapPromise)\n      return importMapPromise\n      .then(function () {\n        return resolveImportMap(id, parentUrl, importMap);\n      });\n\n    return resolveImportMap(id, parentUrl, importMap);\n  };\n\n  const toStringTag$1 = typeof Symbol !== 'undefined' && Symbol.toStringTag;\n\n  systemJSPrototype.get = function (id) {\n    const load = this[REGISTRY][id];\n    if (load && load.e === null && !load.E) {\n      if (load.er)\n        return null;\n      return load.n;\n    }\n  };\n\n  systemJSPrototype.set = function (id, module) {\n    let ns;\n    if (toStringTag$1 && module[toStringTag$1] === 'Module') {\n      ns = module;\n    }\n    else {\n      ns = Object.assign(Object.create(null), module);\n      if (toStringTag$1)\n        Object.defineProperty(ns, toStringTag$1, { value: 'Module' });\n    }\n    const done = Promise.resolve(ns);\n    this.delete(id);\n    this[REGISTRY][id] = {\n      id: id,\n      i: [],\n      n: ns,\n      I: done,\n      L: done,\n      h: false,\n      d: [],\n      e: null,\n      er: undefined,\n      E: undefined,\n      C: done\n    };\n    return ns;\n  };\n\n  systemJSPrototype.has = function (id) {\n    const load = this[REGISTRY][id];\n    return load && load.e === null && !load.E;\n  };\n\n  // Delete function provided for hot-reloading use cases\n  systemJSPrototype.delete = function (id) {\n    const load = this.get(id);\n    if (load === undefined)\n      return false;\n    // remove from importerSetters\n    // (release for gc)\n    if (load && load.d)\n      load.d.forEach(function (depLoad) {\n        const importerIndex = depLoad.i.indexOf(load);\n        if (importerIndex !== -1)\n          depLoad.i.splice(importerIndex, 1);\n      });\n    return delete this[REGISTRY][id];\n  };\n\n}());\n","/*\n * SystemJS named register extension\n * Supports System.register('name', [..deps..], function (_export, _context) { ... })\n * \n * Names are written to the registry as-is\n * System.register('x', ...) can be imported as System.import('x')\n */\n(function () {\n  const systemJSPrototype = System.constructor.prototype;\n\n  const constructor = System.constructor;\n  const SystemJS = function () {\n    constructor.call(this);\n    this.registerRegistry = Object.create(null);\n  };\n  SystemJS.prototype = systemJSPrototype;\n  System = new SystemJS();\n\n  const register = systemJSPrototype.register;\n  systemJSPrototype.register = function (name, deps, declare) {\n    if (typeof name !== 'string')\n      return register.apply(this, arguments);\n\n    this.registerRegistry[name] = [deps, declare];\n\n    // Provide an empty module to signal success.\n    return register.call(this, [], function () { return {}; });\n  };\n\n  const resolve = systemJSPrototype.resolve;\n  systemJSPrototype.resolve = function (id, parentURL) {\n    if (id[0] === '/' || id[0] === '.' && (id[1] === '/' || id[1] === '.' && id[2] === '/'))\n      return resolve.call(this, id, parentURL);\n    if (id in this.registerRegistry)\n      return id;\n    return resolve.call(this, id, parentURL);\n  };\n\n  const instantiate = systemJSPrototype.instantiate;\n  systemJSPrototype.instantiate = function (url, firstParentUrl) {\n    return this.registerRegistry[url] || instantiate.call(this, url, firstParentUrl);\n  };\n})();","System.register(\"app\", [], function (exports_1, context_1) {\n    \"use strict\";\n    var App;\n    var __moduleName = context_1 && context_1.id;\n    return {\n        setters: [],\n        execute: function () {\n            App = /** @class */ (function () {\n                function App() {\n                    console.log('App is running !');\n                }\n                return App;\n            }());\n            exports_1(\"App\", App);\n        }\n    };\n});\nSystem.register(\"main\", [\"app\"], function (exports_2, context_2) {\n    \"use strict\";\n    var app_1;\n    var __moduleName = context_2 && context_2.id;\n    return {\n        setters: [\n            function (app_1_1) {\n                app_1 = app_1_1;\n            }\n        ],\n        execute: function () {\n            new app_1.App();\n            console.log('gulp et la vie... yolo !');\n        }\n    };\n});\n"]}